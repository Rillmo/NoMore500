name: 'NoMore500'
description: 'Action that prevents 500 errors by automatically renewing expired 42OAuth tokens monthly'

branding:
  icon: 'shield'
  color: 'blue'

inputs:
  intra-id:
    description: '42Intra ID'
    required: true
  intra-pw:
    description: '42Intra PW'
    required: true
  app-url:
    description: '42OAuth App URL'
    required: true
  ssh-host:
    description: 'SSH Host'
    required: true
  ssh-private-key:
    description: 'SSH Private Key'
    required: true
  ssh-user:
    description: 'SSH User'
    required: true
  env-path:
    description: 'Path to .env file'
    required: true
  env-key:
    description: 'Key to update in .env file'
    required: true
  reboot-script:
    description: 'Script to reboot server'
    required: true
runs:
  using: 'composite'
  steps:
    # Step 1: Run javascript to crawl for 42OAuth Token
    - name: Crawl for 42OAuth Token
      run: |
        npm install
        node node ${{ github.action_path }}/crawling.js
      shell: bash
      env:
        INTRA_ID: ${{ inputs.intra-id }}
        INTRA_PW: ${{ inputs.intra-pw }}
        APP_URL: ${{ inputs.app-url }}

    # Step 2: Update 42OAuth Token on Server
    - name: Upate Token on Server
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh-private-key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        KEY=$(<.secret42.txt)
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} << EOF
          sed -i 's|${{ inputs.env-key }}=.*|${{ inputs.env-key }}=\"$KEY\"|' ${{ inputs.env-path }}
          ${{ inputs.reboot-script }}
        EOF
      shell: bash

    # Step 3: Remove 42OAuth Token from Local
    - name: Remove Token from Local
      run: |
        rm .secret42.txt
      shell: bash
